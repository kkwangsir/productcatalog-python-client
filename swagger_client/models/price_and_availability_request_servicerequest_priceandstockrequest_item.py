# coding: utf-8

"""
    Product Catalog APIs

    Ingram Micro product catalog API for requesting price and availability of SKUs in real time.  *Production URL - https://api.ingrammicro.com:443/resellers/v5*  # noqa: E501

    OpenAPI spec version: 5.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'index': 'int',
        'ingrampartnumber': 'str',
        'vendorpartnumber': 'str',
        'upc': 'str',
        'customerpartnumber': 'str',
        'warehouseidlist': 'list[str]',
        'extendedvendorpartnumber': 'str',
        'quantity': 'float',
        'enduserid': 'str',
        'govtprogramtype': 'str',
        'govtendusertype': 'str',
        'specialbidnumber': 'str'
    }

    attribute_map = {
        'index': 'index',
        'ingrampartnumber': 'ingrampartnumber',
        'vendorpartnumber': 'vendorpartnumber',
        'upc': 'upc',
        'customerpartnumber': 'customerpartnumber',
        'warehouseidlist': 'warehouseidlist',
        'extendedvendorpartnumber': 'extendedvendorpartnumber',
        'quantity': 'quantity',
        'enduserid': 'enduserid',
        'govtprogramtype': 'govtprogramtype',
        'govtendusertype': 'govtendusertype',
        'specialbidnumber': 'specialbidnumber'
    }

    def __init__(self, index=None, ingrampartnumber=None, vendorpartnumber=None, upc=None, customerpartnumber=None, warehouseidlist=None, extendedvendorpartnumber=None, quantity=None, enduserid=None, govtprogramtype=None, govtendusertype=None, specialbidnumber=None):  # noqa: E501
        """PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem - a model defined in Swagger"""  # noqa: E501
        self._index = None
        self._ingrampartnumber = None
        self._vendorpartnumber = None
        self._upc = None
        self._customerpartnumber = None
        self._warehouseidlist = None
        self._extendedvendorpartnumber = None
        self._quantity = None
        self._enduserid = None
        self._govtprogramtype = None
        self._govtendusertype = None
        self._specialbidnumber = None
        self.discriminator = None
        if index is not None:
            self.index = index
        if ingrampartnumber is not None:
            self.ingrampartnumber = ingrampartnumber
        if vendorpartnumber is not None:
            self.vendorpartnumber = vendorpartnumber
        if upc is not None:
            self.upc = upc
        if customerpartnumber is not None:
            self.customerpartnumber = customerpartnumber
        if warehouseidlist is not None:
            self.warehouseidlist = warehouseidlist
        if extendedvendorpartnumber is not None:
            self.extendedvendorpartnumber = extendedvendorpartnumber
        if quantity is not None:
            self.quantity = quantity
        if enduserid is not None:
            self.enduserid = enduserid
        if govtprogramtype is not None:
            self.govtprogramtype = govtprogramtype
        if govtendusertype is not None:
            self.govtendusertype = govtendusertype
        if specialbidnumber is not None:
            self.specialbidnumber = specialbidnumber

    @property
    def index(self):
        """Gets the index of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501


        :return: The index of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.


        :param index: The index of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: int
        """

        self._index = index

    @property
    def ingrampartnumber(self):
        """Gets the ingrampartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501

        Ingram Micro SKU number  # noqa: E501

        :return: The ingrampartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: str
        """
        return self._ingrampartnumber

    @ingrampartnumber.setter
    def ingrampartnumber(self, ingrampartnumber):
        """Sets the ingrampartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.

        Ingram Micro SKU number  # noqa: E501

        :param ingrampartnumber: The ingrampartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: str
        """

        self._ingrampartnumber = ingrampartnumber

    @property
    def vendorpartnumber(self):
        """Gets the vendorpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501

        Vendor/Manufacture Part Number  # noqa: E501

        :return: The vendorpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: str
        """
        return self._vendorpartnumber

    @vendorpartnumber.setter
    def vendorpartnumber(self, vendorpartnumber):
        """Sets the vendorpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.

        Vendor/Manufacture Part Number  # noqa: E501

        :param vendorpartnumber: The vendorpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: str
        """

        self._vendorpartnumber = vendorpartnumber

    @property
    def upc(self):
        """Gets the upc of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501

        Universal Product code  # noqa: E501

        :return: The upc of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: str
        """
        return self._upc

    @upc.setter
    def upc(self, upc):
        """Sets the upc of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.

        Universal Product code  # noqa: E501

        :param upc: The upc of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: str
        """

        self._upc = upc

    @property
    def customerpartnumber(self):
        """Gets the customerpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501

        Unique identoifier for the customer, needs custom setup.  # noqa: E501

        :return: The customerpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: str
        """
        return self._customerpartnumber

    @customerpartnumber.setter
    def customerpartnumber(self, customerpartnumber):
        """Sets the customerpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.

        Unique identoifier for the customer, needs custom setup.  # noqa: E501

        :param customerpartnumber: The customerpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: str
        """

        self._customerpartnumber = customerpartnumber

    @property
    def warehouseidlist(self):
        """Gets the warehouseidlist of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501

        Unique identity for Ingram Micro warehouses against which stock details are returned.  # noqa: E501

        :return: The warehouseidlist of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: list[str]
        """
        return self._warehouseidlist

    @warehouseidlist.setter
    def warehouseidlist(self, warehouseidlist):
        """Sets the warehouseidlist of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.

        Unique identity for Ingram Micro warehouses against which stock details are returned.  # noqa: E501

        :param warehouseidlist: The warehouseidlist of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: list[str]
        """

        self._warehouseidlist = warehouseidlist

    @property
    def extendedvendorpartnumber(self):
        """Gets the extendedvendorpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501


        :return: The extendedvendorpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: str
        """
        return self._extendedvendorpartnumber

    @extendedvendorpartnumber.setter
    def extendedvendorpartnumber(self, extendedvendorpartnumber):
        """Sets the extendedvendorpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.


        :param extendedvendorpartnumber: The extendedvendorpartnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: str
        """

        self._extendedvendorpartnumber = extendedvendorpartnumber

    @property
    def quantity(self):
        """Gets the quantity of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501


        :return: The quantity of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.


        :param quantity: The quantity of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: float
        """

        self._quantity = quantity

    @property
    def enduserid(self):
        """Gets the enduserid of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501


        :return: The enduserid of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: str
        """
        return self._enduserid

    @enduserid.setter
    def enduserid(self, enduserid):
        """Sets the enduserid of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.


        :param enduserid: The enduserid of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: str
        """

        self._enduserid = enduserid

    @property
    def govtprogramtype(self):
        """Gets the govtprogramtype of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501


        :return: The govtprogramtype of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: str
        """
        return self._govtprogramtype

    @govtprogramtype.setter
    def govtprogramtype(self, govtprogramtype):
        """Sets the govtprogramtype of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.


        :param govtprogramtype: The govtprogramtype of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: str
        """

        self._govtprogramtype = govtprogramtype

    @property
    def govtendusertype(self):
        """Gets the govtendusertype of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501


        :return: The govtendusertype of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: str
        """
        return self._govtendusertype

    @govtendusertype.setter
    def govtendusertype(self, govtendusertype):
        """Sets the govtendusertype of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.


        :param govtendusertype: The govtendusertype of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: str
        """

        self._govtendusertype = govtendusertype

    @property
    def specialbidnumber(self):
        """Gets the specialbidnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501


        :return: The specialbidnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :rtype: str
        """
        return self._specialbidnumber

    @specialbidnumber.setter
    def specialbidnumber(self, specialbidnumber):
        """Sets the specialbidnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.


        :param specialbidnumber: The specialbidnumber of this PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem.  # noqa: E501
        :type: str
        """

        self._specialbidnumber = specialbidnumber

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PriceAndAvailabilityRequestServicerequestPriceandstockrequestItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
