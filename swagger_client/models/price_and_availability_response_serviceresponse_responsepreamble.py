# coding: utf-8

"""
    Product Catalog APIs

    Ingram Micro product catalog API for requesting price and availability of SKUs in real time.  *Production URL - https://api.ingrammicro.com:443/resellers/v5*  # noqa: E501

    OpenAPI spec version: 5.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class PriceAndAvailabilityResponseServiceresponseResponsepreamble(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'responsestatus': 'str',
        'responsemessage': 'str',
        'statuscode': 'str'
    }

    attribute_map = {
        'responsestatus': 'responsestatus',
        'responsemessage': 'responsemessage',
        'statuscode': 'statuscode'
    }

    def __init__(self, responsestatus=None, responsemessage=None, statuscode=None):  # noqa: E501
        """PriceAndAvailabilityResponseServiceresponseResponsepreamble - a model defined in Swagger"""  # noqa: E501
        self._responsestatus = None
        self._responsemessage = None
        self._statuscode = None
        self.discriminator = None
        if responsestatus is not None:
            self.responsestatus = responsestatus
        if responsemessage is not None:
            self.responsemessage = responsemessage
        if statuscode is not None:
            self.statuscode = statuscode

    @property
    def responsestatus(self):
        """Gets the responsestatus of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.  # noqa: E501

        SUCCESS or FAILED, sometimes PARTIAL SUCCESS if connection to 1 of the systems fails  # noqa: E501

        :return: The responsestatus of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.  # noqa: E501
        :rtype: str
        """
        return self._responsestatus

    @responsestatus.setter
    def responsestatus(self, responsestatus):
        """Sets the responsestatus of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.

        SUCCESS or FAILED, sometimes PARTIAL SUCCESS if connection to 1 of the systems fails  # noqa: E501

        :param responsestatus: The responsestatus of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.  # noqa: E501
        :type: str
        """

        self._responsestatus = responsestatus

    @property
    def responsemessage(self):
        """Gets the responsemessage of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.  # noqa: E501

        Overall status message including error message  # noqa: E501

        :return: The responsemessage of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.  # noqa: E501
        :rtype: str
        """
        return self._responsemessage

    @responsemessage.setter
    def responsemessage(self, responsemessage):
        """Sets the responsemessage of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.

        Overall status message including error message  # noqa: E501

        :param responsemessage: The responsemessage of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.  # noqa: E501
        :type: str
        """

        self._responsemessage = responsemessage

    @property
    def statuscode(self):
        """Gets the statuscode of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.  # noqa: E501

        Statuscode Message  # noqa: E501

        :return: The statuscode of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.  # noqa: E501
        :rtype: str
        """
        return self._statuscode

    @statuscode.setter
    def statuscode(self, statuscode):
        """Sets the statuscode of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.

        Statuscode Message  # noqa: E501

        :param statuscode: The statuscode of this PriceAndAvailabilityResponseServiceresponseResponsepreamble.  # noqa: E501
        :type: str
        """

        self._statuscode = statuscode

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PriceAndAvailabilityResponseServiceresponseResponsepreamble, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PriceAndAvailabilityResponseServiceresponseResponsepreamble):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
